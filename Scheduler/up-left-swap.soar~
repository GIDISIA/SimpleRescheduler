sp {Scheduler*propose*up-left-swap
   (state <s> ^name Scheduler
              ^calculations.pending-general-calculations 0
              ^resource <r1> {<> <r1> <r2>})
   (<r1> ^order <order1>)
   (<r2> ^order <order2> < <order1>)
   (<r1> ^task <t1>)
   (<r2> ^task <t2>)
   (<t1> ^start <startT1>)
   (<t2> ^start <startT2> < <startT1>)
   (<t1> ^isFocal 1)
   (<t1> ^name <namet1>)
   (<t2> ^name <namet2>)
   (<t2> ^name <> Task0)
   (<t2> ^name <> TaskFinal)
   (<t1> ^productType <product>)
   (<r2> ^canProcess <product>)
   (<t2> ^productType <product2>)
   (<r1> ^canProcess <product2>)
-->
   (<s> ^operator <op> +)
   (<op> ^name up-left-swap
         ^focalTask <namet1>
         ^auxTask <namet2>)
}

sp {Scheduler*apply*up-left-swap
   (state <s> ^name Scheduler
              ^operator <op>
              ^calculations <c>)
   (<c> ^pending-general-calculations <pgc>)
   (<op> ^name up-left-swap
         ^focalTask <nametFocal>
         ^auxTask <nametAux>)
   (<s> ^resource <r1> {<> <r1> <r2>})
   (<r1> ^task <tFocal> {<> <tFocal> <tPrevFocal>}
                        {<> <tPrevFocal> <> <tFocal> <tPosFocal>}
         ^processingRate <procRate1>)
   (<r2> ^task <tAux> {<> <tAux> <tPrevAux>}
                      {<> <tPrevAux> <> <tAux> <tPosAux>}
         ^processingRate <procRate2>)
   (<tFocal> ^name <nametFocal>
             ^quantity <quantity>
             ^duration <duration> 
             ^productType <prodTypeFocal>
         ^previous <prevTFocal>
         ^next <nexttFocal>)
   (<tAux> ^name <nametAux>
           ^quantity <quantityAux>
           ^duration <durationAux> 
           ^productType <prodTypeAux>
         ^previous <prevtAux>
         ^next <nexttAux>)
   (<procRate1> ^rate <rater1>
               ^productType <prodTypeAux>)
   (<procRate2> ^rate <rater2>
               ^productType <prodTypeFocal>)
   (<tPrevFocal> ^name <nametPrevFocal>
                 ^next <nametFocal>)
   (<tPosFocal>   ^name <nametPosFocal>
                  ^previous <nametFocal>)
   (<tPrevAux> ^name <nametPrevAux>
               ^next <nametAux>)
   (<tPosAux> ^name <nametPosAux>
              ^previous <nametAux>)
-->
   (<tFocal> ^previous <prevtAux> <prevTFocal> -
         ^next <nexttAux> <nexttFocal> -)
   
   (<tAux> ^previous <prevTFocal> <prevtAux> -
         ^next <nexttFocal> <nexttAux> -)
   
   (<tPrevAux> ^next <nametFocal> <nametAux> -)
   
   (<tPosAux> ^previous <nametFocal> <nametAux> -)  
   
   (<tPosFocal> ^previous <nametAux> <nametFocal> -)
   
   (<tPrevFocal> ^next <nametAux> <nametFocal> -)
   
   (<tFocal> ^duration (/ <quantity> <rater2>) <duration> -)
   
   (<tAux> ^duration (/ <quantityAux> <rater1>) <durationAux> -)
   
   #Insertamos la TFocal
   (<r2> ^task <tFocal>)
   (<r1> ^task <tFocal> -)
   
   #Insertamos la TAux
   (<r1> ^task <tAux>)
   (<r2> ^task <tAux> -)
   
   (<c> ^pending-general-calculations 1 <pgc> -)
}